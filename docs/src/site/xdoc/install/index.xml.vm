<?xml version="1.0" encoding="UTF-8"?>

<!--
  Copyright 2019, California Institute of Technology ("Caltech").
  U.S. Government sponsorship acknowledged.
  
  All rights reserved.
  
  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions are met:
  
  * Redistributions of source code must retain the above copyright notice,
  this list of conditions and the following disclaimer.
  * Redistributions must reproduce the above copyright notice, this list of
  conditions and the following disclaimer in the documentation and/or other
  materials provided with the distribution.
  * Neither the name of Caltech nor its operating division, the Jet Propulsion
  Laboratory, nor the names of its contributors may be used to endorse or
  promote products derived from this software without specific prior written
  permission.
  
  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
  LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  POSSIBILITY OF SUCH DAMAGE.
-->

<document>
  <properties>
    <title>Installation</title>
    <author email="Hyun.H.Lee@jpl.nasa.gov">Hyun Lee</author>
    <author email="Jordan.Padams@jpl.nasa.gov">Jordan Padams</author>
    <author email="Sean.Hardman@jpl.nasa.gov">Sean Hardman</author>
  </properties>

<body>
<section name="Required Software">
<p>
The high level architecture of PDS Registry and its main components is shown below.
</p>
<img src="/images/registry-harvest.jpg" width="35%" />
<p>
You can run all components on your laptop or install some or all of them on a server.
</p>

<subsection name="Java">
<p>
If you do not already hava Java Runtime Environment (JRE) or Java Development Kit (JDK),
install it as described in <a href="java.html">Java Installation</a> section.
</p>
<p>
You will need Java to run Registry Manager, Harvest and Apache Solr.
</p>
</subsection>

<subsection name="Apache Solr">
<p>
Apache Solr running in cloud mode is required to store PDS Registry data. 
It can be installed as described in <a href="solr.html">Solr Installation</a> section.
</p>
<p>
You can run Solr locally on your laptop / desktop or remotely on a server.
</p>
</subsection>

</section>

<section name="Registry Manager">
<p>
Download the package from GitHub (
<a href="https://github.com/NASA-PDS-Incubator/${project.artifactId}/releases/download/v${project.version}/${project.artifactId}-${project.version}-bin.tar.gz" target="_blank">TAR.GZ</a> 
<a href="https://github.com/NASA-PDS-Incubator/${project.artifactId}/releases/download/v${project.version}/${project.artifactId}-${project.version}-bin.tar.gz" target="_blank">ZIP</a>). 

The binary distribution is available in identical zip or tar/gzip packages. 
The installation directory may vary from environment to environment but in UNIX-based environments it is typical to install software packages in the <i>/home/pds</i> directory and in Windows-based environments it is typical to install software packages in the <i>C:\Program Files</i> directory. 
Unpack the selected binary distribution file with one of the following commands:
</p>

      <p>The top-level directory where the package is installed will be referenced in these instructions as <i><b>$REGISTRY_HOME</b></i>.</p>
      <source>
% unzip ${project.artifactId}-${project.version}-bin.zip
or
% tar -xzvf ${project.artifactId}-${project.version}-bin.tar.gz
      </source>

      <p>Note: Depending on the platform, the native version of <i>tar</i> may produce an error when attempting to unpack the distribution file because many of the file paths are greater than 100 characters. If available, the GNU version of tar will resolve this problem. If that is not available or cannot be installed, the zipped package will work just fine in a UNIX environment.
      </p>

      <p>The commands above result in the creation of the <i>${project.artifactId}-${project.version}</i> directory with the following directory structure:
      </p>

      <ul>
        <li><b>LICENSE</b><br/>
          <p>The Apache License, Version 2.0
          </p>
        </li>
        <li><b>README.txt</b><br/>
          <p>A README file with some high level information on the project and how to view more detailed documentation.
          </p>
        </li>
        <li><b>VERSION.txt</b><br/>
          <p>A VERSION file contains the version of the project.
          </p>
        </li>
        <li><b>bin/</b><br />
          <p>This directory contains the scripts for installing or uninstalling.</p>
        </li>
        <li><b>build/</b><br />
          <p>This directory contains the scripts for installing or uninstalling the project in Docker. </p>
        </li>
        <li><b>dist/</b><br />
          <p>This directory contains the jar for the Registry API (PDS Search Protocol).</p>
        </li>
        <li><b>collections/</b><br />
          <p>This directory contains the Apache Solr configuration for collections installed by default by the Registry.
          </p>
        </li>
        <li><b>lib/</b><br />
          <p>This directory contains JARs used by some of the registry utility tools.</p>
        </li>
      </ul>
    </section>
    
    <hr />
    <section name="Configuring the Environment">
      <p>In order to execute the Harvest Tool, the local environment must first be configured appropriately. This section describes how to setup the user environment on UNIX-based and Windows machines.
      </p>
      
      <subsection name="UNIX-Based Environment">
        <p>This section details the environment setup for UNIX-based machines. The binary distribution includes a couple shell scripts that must be executed from the command-line. 
          Setting the <i>REGISTRY_HOME</i> environment variable to where the Registry is installed can help when using Harvest in the future, but 
          is not required.
        </p>
        
        <p>The following command demonstrates how to set the <i>REGISTRY_HOME</i> environment variable (in Bourne shell), by appending to its current setting. You may want to append this to 
          the end of your <i>$HOME/.bash_profile</i> (or equivalent) to avoid having to reset this in the future:
        </p>
        
        <source>
          % export REGISTRY_HOME=/path/to/${project.artifactId}-${project.version}
        </source>
        
        <p>In addition, the shell scripts require that the Java be installed on the machine, you can both check it is installed or set the <i>JAVA_HOME</i> environment variable:
        </p>
        
        <source>
          # Check if it is installed globally
          % which java
          
          # If not, you can set JAVA_HOME
          % export JAVA_HOME=/path/to/java/home
        </source>
        
        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files without the .bat extension) and change the line in the example above to represent the local Java installation.
        </p>
      </subsection>
      
      <subsection name="Windows Environment">
        <p>This section details the environment setup for Windows machines. The binary distribution includes a couple batch scripts that must be executed from the command-line. Setting the <i>PATH</i> environment variable to the location of the files, enables the batch scripts to be executed from any location on the local machine.
        </p>
        
        <p>The following command demonstrates how to set the <i>PATH</i> environment variable, by appending to its current setting:
        </p>
        
        <source>
          C:\&gt; set PATH = %PATH%;C:\Program Files\\${project.artifactId}-${project.version}\bin
        </source>
        
        <p>In addition, the batch scripts require that the <i>JAVA_HOME</i> environment variable be set to the appropriate location of the Java installation on the local machine. This may have already been set when Java was installed. However, if it hasn't, then run the following command to set the <i>JAVA_HOME</i> environment variable:
        </p>
        
        <source>
          C:\&gt; set JAVA_HOME = C:\path\to\java\home
        </source>
        
        <p>The system administrator for the local machine may need to be consulted for this location. The path specified should have a <i>bin</i> sub-directory that contains the <i>java</i> executable. This variable may also be defined within the scripts. Edit the scripts (files with the .bat extension) and change the line in the example above to represent the local Java installation. Additional methods for setting Windows environment variables can be found in the <a href="index-win.html">Windows System Properties</a> document.
        </p>
      </subsection>
    </section>

    <section name="Install Solr and Registry - Docker">
      <p><b>NOTE: Docker installation is currently only available for Linux / Mac OS X users. Windows Users please use the <a href="#Install_Solr_and_Registry_-_Standalone">Standalone Installation</a></b>
      </p>

      <p>This section details how to install and deploy a dockerized instance of the PDS Registry.
      </p>

	    <p>The following Registry installation procedure is for Linux and Mac operating systems. Please contact Engineering Node if you run into any issues.
	    </p>

      <ol>
        <li>
          <p>Install and Run Docker from <a href="https://docs.docker.com/v17.12/install/" target="_blank">Docker Installation Guide</a> website if your system doesn't have Docker.</p>
        </li>
        
        <li>Move to the directory that registry installer script resides.
          <source>
% cd $REGISTRY_HOME/bin
          </source>
        </li>
        <li>Execute the Registry Docker Installer script and you should see the following output if successful:
          <source>
% ./registry_installer_docker.sh install

Installing...
Building Registry Docker Image.                               SUCCESS
Starting Registry Docker Container                            SUCCESS
Waiting for Solr server to start.
Creating a Registry Service Blob collection (registry)        SUCCESS
Creating a XPath collection (xpath)                           SUCCESS
Creating a Search collection (data)                           SUCCESS
          </source>
        </li>
        <li>Next, you can <a href="#Verifying_Successful_Installation">Verify Successful Installation</a> and potentially configure for <a href="#Operational_Deployment">Operational Deployment</a> for setting this up on an operational, public server.</li>
      </ol>
    </section>
    


    <section name="Verifying Successful Installation">
      <ul>
        <li>To verify installation, first, check the docker image is running:
          <source>
% docker ps

CONTAINER ID        IMAGE                     COMMAND                  CREATED             STATUS              PORTS                    NAMES
0ee274f1fa5f        registry:2.2.0   "/bin/bash -c 'solr …"   5 minutes ago       Up 5 minutes        0.0.0.0:8983->8983/tcp   registry
          </source>
        </li> 
        <li>Next, you can check the solr endpoint is up, however, how to test that will depend upon your server configuration:
          <ul>
            <li>If running on your local machine, open up your favorite browser and go to <i>http://localhost:8983/solr</i> to view the Solr admin interface.</li>
            <li>If running on a server and the port is open, replace local host with your domain, e.g. <i>http://pds.nasa.gov:8983/solr</i></li>
            <li>If running on a server and the port is not open, you can run a <a href="https://curl.haxx.se/">curl</a> command to verify Solr is active:
              <source>
% curl http://localhost:8983/solr/admin/cores?action=STATUS

{
"responseHeader":{
"status":0,
"QTime":4},
"initFailures":{},
"status":{
"data_shard1_replica_n1":{
  "name":"data_shard1_replica_n1",
  "instanceDir":"/var/solr/data/data_shard1_replica_n1",
  "dataDir":"/var/solr/data/data_shard1_replica_n1/data/",
  "config":"solrconfig.xml",
  "schema":"managed-schema",
  "startTime":"2019-10-25T04:06:13.058Z",
  "uptime":551826,
  "lastPublished":"active",
  "configVersion":0,
  "cloud":{
    "collection":"data",
    "shard":"shard1",
    "replica":"core_node3"},
  "index":{
    "numDocs":0,
    "maxDoc":0,
    "deletedDocs":0,
    "indexHeapUsageBytes":0,
    "version":2,
    "segmentCount":0,
    "current":true,
    "hasDeletions":false,
    "directory":"org.apache.lucene.store.NRTCachingDirectory:NRTCachingDirectory(MMapDirectory@/var/solr/data/data_shard1_replica_n1/data/index lockFactory=org.apache.lucene.store.NativeFSLockFactory@5566110; maxCacheMB=48.0 maxMergeSizeMB=4.0)",
    "segmentsFile":"segments_1",
    "segmentsFileSizeInBytes":69,
    "userData":{},
    "sizeInBytes":69,
    "size":"69 bytes"}},
    .
    .
    .
              </source>
            </li>
          </ul>
        </li>
        <li>You can learn more about the <a href="../operate/index.html#Registry_Solr_Collections">Registry Solr Collections</a> installed, or continue onto <a href="#Next_Steps">Next Steps</a>.</li>
      </ul>

    </section>
    <hr />
    <section name="Operational Deployment">
      <p>Once you are ready to deploy the Registry operationally, you will want to secure Solr by setting up a reverse proxy in your Apache HTTP Server <i>httpd.conf</i> file:</p>
      <source>
ProxyPass /services/registry/ http://localhost:8983/solr/
ProxyPassReverse /services/registry/ http://localhost:8983/solr/
ProxyPass /services/registry http://localhost:8983/solr
ProxyPassReverse /services/registry http://localhost:8983/solr

&lt;!-- Secures the Solr admin interface to your local subnet. Change your IP/subnet information accordingly. --&gt;
&lt;Location "/services/registry/#/"&gt;
Order Deny,Allow
Deny from all
Allow from 123.45.0.0/255.255.0.0 123.56.0.0/255.255.0.0 .jpl.nasa.gov
&lt;/Location&gt;
      </source>
      
      <p>You should now be able to go to http://my.website.com/services/registry and see the Solr Admin interface.</p>
    </section>

    <hr />
    <section name="Next Steps">
      <subsection name="Install Harvest Tool">
        <p><a href="../../../ingest/harvest/index.html">The Harvest Tool</a> can be used to populate the Registry with data. The Harvest Tool runs locally at the Discipline Node to crawl the local data repository in order to discover products and index associated metadata with the Registry.</p>
      </subsection>
    </section>

    <hr />
    <section name="Uninstall">
      <p>In the event you want to uninstall the Registry either to install a newer version or for another reason:</p>
      <ul>
        <li>
          For Docker Installation:
          <source>
% ./registry_installer_docker.sh uninstall
Uninstalling...

Are you sure you want to uninstall the Registry and Search and all associated indices? (y/n) y
Removing the Registry Blob collection from the SOLR.
Removing the Registry XPath collection.
Removing the Search collection.
Stopping the SOLR instance.
Removing Registry Docker Images.
Removing 'solr_data' volume
          </source>
        </li>
        <li>
          For Standalone Installation:
          <source>
$ ./registry_installer_standalone.sh uninstall
STARTING Registry Installer in standalone mode.

  Registry   .....
       ( v ${project.version} )
       ( installing on platform: Mac OS X )
       ( IP Address:- 192.168.1.120 )
       ( Host Name:- MY_HOST )

Enter location of SOLR installation: /usr/local/solr-8.2.0
Deleting registry collection...
{
  "responseHeader":{
    "status":0,
    "QTime":198},
  "success":{"192.168.1.120:8983_solr":{"responseHeader":{
        "status":0,
        "QTime":47}}}}


Deleted collection 'registry' using command:
http://192.168.1.120:8983/solr/admin/collections?action=DELETE&amp;name=registry
Return status from deleting registry collection = 0
Registry collection is deleted successfully.
Deleting xpath collection...
{
  "responseHeader":{
    "status":0,
    "QTime":187},
  "success":{"192.168.1.120:8983_solr":{"responseHeader":{
        "status":0,
        "QTime":54}}}}


Deleted collection 'xpath' using command:
http://192.168.1.120:8983/solr/admin/collections?action=DELETE&amp;name=xpath
Return status from deleting xpath collection = 0
Xpath collection is deleted successfully.
Deleting search collection (data)...
{
  "responseHeader":{
    "status":0,
    "QTime":171},
  "success":{"192.168.1.120:8983_solr":{"responseHeader":{
        "status":0,
        "QTime":37}}}}


Deleted collection 'data' using command:
http://192.168.1.120:8983/solr/admin/collections?action=DELETE&amp;name=data
Return status from deleting search collection (data) = 0
Search collection (data) is deleted successfully.

Found 1 Solr nodes:

Solr process 6007 running on port 8983
{
  "solr_home":"/usr/local/solr-8.2.0/server/solr",
  "version":"8.2.0 31d7ec7bbfdcd2c4cc61d9d35e962165410b65fe - ivera - 2019-07-19 15:11:04",
  "startTime":"2019-10-25T04:41:04.215Z",
  "uptime":"0 days, 0 hours, 20 minutes, 2 seconds",
  "memory":"84.4 MB (%16.5) of 512 MB",
  "cloud":{
    "ZooKeeper":"localhost:9983",
    "liveNodes":"1",
    "collections":"0"}}


Stopping the SOLR server...
Sending stop command to Solr running on port 8983 ... waiting up to 180 seconds to allow Jetty process 6007 to stop gracefully.

The SOLR server is stopped successfully.
          </source>
        </li>
      </ul>
    </section>

    <hr />
    <section name="Common Errors">
      <subsection name="Failed to create a registry service collection (.system)...">
	<p>This issue could happen for several reasons, but we will need to look through the logs to determine the issue:
	</p>
	<ul>
	  <li>Look at Solr Console log to determine where the issue may lie:
	    <source>
# STANDALONE INSTALLATION
open $SOLR_HOME/server/logs/solr.log
open $SOLR_HOME/server/logs/solr-8983-console.log
	    </source>
	  </li>
	  <li>If the log output states:
	    <source>
Error occurred during initialization of VM
Could not reserve enough space for 2097152KB object heap
	    </source>
	    TBD solution
	  </li>
	</ul>
      </subsection>
      <subsection name="HTTP 404 - Requested Resource Not Available">
        <p>This error means the application failed to install correctly. The following are potential mitigation strategies:
        </p>
        <ul>
          <li>Verify domain and port are correct for the local Solr installation.</li>
          <li>View $SOLR_HOME/server/logs/solr.log for information on potential causes of the failed deployment.</li>
        </ul>
      </subsection>

      <subsection name="Other Errors">
        <p>For other errors that arise while testing the installation, see the <a href="../operate/index.html#Common_Errors">Operate - Common Errors</a></p>
      </subsection>
    </section>

  </body>
</document>
