<?xml version="1.0" encoding="UTF-8"?>

<document>
<properties>
  <title>Harvest Operation</title>
</properties>

<body>

<section name="Harvest Overview">
<p>
Harvest is a command-line tool for extracting metadata from PDS4 products (labels).
It parses PDS4 files and stores extracted metadata in an intermediate XML file.
This intermediate file can be loaded into Solr by Registry Manager or standard Solr tools, 
such as Solr post tool.
</p>
<p>
Harvest executable scripts for Windows (<i>harvest.bat</i>) and Linux / Mac (<i>harvest</i>) 
are located in <i>bin</i> sub-folder of the installation directory (e.g., <i>/home/pds/harvest/</i>).
</p>
<p>
To see the basic usage information (shown below) run Harvest without any parameters.
</p>
<source>
usage: harvest &lt;options&gt;
 -c  &lt;file&gt;    Harvest configuration file.
 -l  &lt;file&gt;    Log file. Default is /tmp/harvest/harvest.log.
 -o  &lt;dir&gt;     Output directory for Solr documents. Default is /tmp/harvest/solr
 -v  &lt;level&gt;   Logger verbosity: 0=Debug, 1=Info (default), 2=Warning, 3=Error.
</source>
</section>

<section name="Quick Start">
<p>
To run Harvest you need an XML configuration file. 
For example, to process all XML files in <i>/data/LADEE/ldex_20161118</i> folder and 
all subfolders, create the following configuration file and save it as <i>/tmp/ladee.cfg</i>.
</p>

<source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;harvest&gt;
  &lt;directories&gt;
    &lt;path&gt;/data/LADEE/ldex_20161118&lt;/path&gt;
    &lt;fileFilter&gt;
      &lt;include&gt;*.xml&lt;/include&gt;
    &lt;/fileFilter&gt;
  &lt;/directories&gt;
&lt;/harvest&gt;
</source>

<p>
Then run Harvest
<source>
harvest -c /tmp/ladee.cfg
</source>
</p>

<p>
The tool will print some log messages and create an intermediate file, <i>solr-docs.xml</i> 
in default output directory <i>/tmp/harvest/solr/</i>. The file contains a list of Solr documents
in XML format whch can be loaded into Solr by Registry Manager or standard Solr tools.
An example Solr document is shown below.

<source>
&lt;doc&gt;
  &lt;field name="lid">urn:nasa:pds:ladee_ldex&lt;/field>
  &lt;field name="vid">1.2&lt;/field>
  &lt;field name="lidvid">urn:nasa:pds:ladee_ldex::1.2&lt;/field>
  &lt;field name="title">LADEE LUNAR DUST EXPERIMENT&lt;/field>
  &lt;field name="product_class">Product_Bundle&lt;/field>
  &lt;field name="_file_name">bundle_ladee_ldex.xml&lt;/field>
  &lt;field name="_file_type">application/xml&lt;/field>
  &lt;field name="_file_size">5735&lt;/field>
  &lt;field name="_file_md5">zlYAt05W/Ag6Qy4HlNYy+g==&lt;/field>
  &lt;field name="_xml_root_element">Product_Bundle&lt;/field>
  &lt;field name="_package_id">8627271a-01f5-49ad-8ce5-69f78fd6b5f4&lt;/field>
  &lt;field name="instrument_host_ref">urn:nasa:pds:context:instrument_host:spacecraft.ladee&lt;/field>
  &lt;field name="instrument_ref">urn:nasa:pds:context:instrument:instrument.ldex__ladee&lt;/field>
  &lt;field name="investigation_ref">urn:nasa:pds:context:investigation:mission.ladee&lt;/field>
  &lt;field name="target_ref">urn:nasa:pds:context:target:dust.dust&lt;/field>
  &lt;field name="target_ref">urn:nasa:pds:context:target:satellite.moon&lt;/field&gt;
&lt;/doc&gt;
</source>
</p>

<p>
By default Harvest extracts lid, vid, title, product_class, all internal refrences and basic
file information, such as file name, type, size, and MD5 hash.
</p>

<h4>Package ID</h4>
<p>
Each Harvest run generates unique package ID, stored in <i>_package_id</i> field.
After loading extracted metadata into Solr, all documents from a particular Harvest run can be 
deleted by this package id.
</p>

</section>

<!-- ===================================================== -->

<section name="Extracting More Metadata">
<p>
For example, to extract <i>start_date_time</i> and <i>stop_date_time</i> from observational products,
you have to define an XPath to field name map. First, create an XML file shown below and save it as
<i>/home/pds/harvest/conf/observational.xml</i>. You can use another file name or directory if you want.

<source>
&lt;?xml version="1.0" encoding="UTF-8"?&gt;

&lt;xpaths&gt;
  &lt;xpath fieldName="start_date_time"&gt;/Product_Observational/Observation_Area/Time_Coordinates/start_date_time&lt;/xpath&gt;
  &lt;xpath fieldName="stop_date_time"&gt;/Product_Observational/Observation_Area/Time_Coordinates/stop_date_time&lt;/xpath&gt;
&lt;/xpaths&gt;
</source>
</p>

<p>
These XPaths will be used to extract start and stop date values which will be saved in the intermediate XML file as
<i>start_date_time</i> and <i>stop_date_time</i> fields.
</p>

<p>
Next, add the following section to the Harvest configuration file.

<source>
&lt;harvest&gt;
...
  &lt;xpathMaps baseDir="/home/pds/harvest/conf"&gt;
    &lt;xpathMap rootElement="Product_Observational" filePath="observational.xml" /&gt;
  &lt;/xpathMaps&gt;
&lt;/harvest&gt;
</source>
</p>

<p>
Now, if you run Harvest, Solr documents for observational products will contain start and stop dates.
<source>
&lt;doc&gt;
  &lt;field name="lid"&gt;urn:nasa:pds:ladee_ldex:data_derived:derived_ldex_ltden_pds_derived_tab&lt;/field&gt;
  &lt;field name="vid"&gt;1.2&lt;/field&gt;
...
  &lt;field name="start_date_time"&gt;2013-10-25T00:00:00Z&lt;/field&gt;
  &lt;field name="stop_date_time"&gt;2014-04-18T04:30:00Z&lt;/field&gt;
&lt;/doc&gt;
</source>
</p>

<p>
Note that baseDir attribute is optional. You can also provide full path in filePath attribute
as shown below

<source>
  &lt;xpathMaps&gt;
    &lt;xpathMap rootElement="Product_Observational" filePath="/home/pds/harvest/conf/observational.xml" /&gt;
  &lt;/xpathMaps&gt;
</source>
</p>

<p>
The rootElement attribute is also optional. In the above example, the XPath queries will run 
against observational products only. If you remove rootElement attribute, then the same XPath queries 
will run against all products, such as Product_Collection, Product_Document, etc.
</p>

<p>
Finally, you can have multiple &lt;xpathMap&gt; entries, even for the same rootElement.
</p>

</section>

<!-- ====================================================================== -->

<section name="BLOB Storage">
<p>
You can store whole PDS product labels as BLOBs (Binary Large OBjects). 
To enable this feature add the following section in Harvest configuration file.
<source>
&lt;blobStorage type="embedded" /&gt;
</source>
</p>
<p>
After running Harvest, <i>solr-docs.xml</i> "intermediate" file will have <i>_file_blob</i> field with zipped product label. 
You can expect up to 900% compression rate for some files. 
For example, many LADEE housekeeping labels are about 45KB. BLOB size is about 5KB.
For smaller files, such as collection labels, compression rate is about 350% (5.5KB file is compressed to 1.6KB).
</p>
<p>
After loading data into Solr, you can extract BLOBs by running Registry Manager tool:
<source>
registry-manager export-file -lidvid urn:nasa:pds:ladee_ldex:data_calibrated::1.2 -filePath /tmp/data_calibrated.xml
</source>
</p>

</section>

<!-- ====================================================================== -->

<section name="File Reference / Access URL">
<p>
To store full path of a product label file, add the following section in Harvest configuration file.
<source>
&lt;fileRef/&gt;
</source>
</p>
<p>
After running Harvest, you should see <i>_file_ref</i> field added to each Solr document:
<source>
&lt;doc&gt;
...
  &lt;field name="_file_ref">/C:/data/LADEE/ldex_20161118/bundle_ladee_ldex.xml&lt;/field>
...
&lt;/doc&gt;
</source>
Note that on Windows, backslashes are replaced with forward slashes and disk letter is included.
</p>

<p>
To replace file path prefix with another value, let's change &lt;fileRef/&gt; tag in Harvest configuration file:
<source>
&lt;fileRef&gt;
  &lt;replace prefix="/C:/data/LADEE/" replacement="https://pds.nasa.gov/data/pds4/" /&gt;
&lt;/fileRef&gt;
</source>
</p>

<p>
Now, after running Harvest, you shoul see different <i>_file_ref</i> value:
<source>
&lt;doc&gt;
...
  &lt;field name="_file_ref">https://pds.nasa.gov/data/pds4/ldex_20161118/bundle_ladee_ldex.xml&lt;/field>
...
&lt;/doc&gt;
</source>
</p>

</section>

<!-- ====================================================================== -->

<section name="Directories and Filters">

<h4>Crawl Products from Multiple Directories</h4>
<p>
To process products from multiple directories, specify multiple &lt;path&gt; entries in Harvest configuration file:
<source>
&lt;harvest&gt;
  &lt;directories&gt;
    &lt;path&gt;/data/LADEE/ldex_20161118/data_calibrated&lt;/path&gt;
    &lt;path&gt;/data/LADEE/ldex_20161118/data_derived&lt;/path&gt;
...
&lt;/harvest&gt;
</source>
</p>

<h4>Filtering Files</h4>
<p>
This feature has limited functionality since all PDS4 product labels are XML files and
Harvest could not process other files. Usually you would include the following file filter in most 
Harvest configuration files:
<source>
&lt;harvest&gt;
  &lt;directories&gt;
...
    &lt;fileFilter&gt;
      &lt;include&gt;*.xml&lt;/include&gt;
    &lt;/fileFilter&gt;
  &lt;/directories&gt;
&lt;/harvest&gt;
</source>
If you don't provide any filters, Harvest will try to pocess every file and for non-XML files you will see
"Unsupported MIME type" log messages.
</p>
<p>
You can use one or more &lt;include&gt; filters or one or more &lt;exclude&gt; filters, but not 
both &lt;include&gt; and &lt;exclude&gt; at the same time.
</p>

<h4>Excluding Sub-Directories</h4>
<p>
For example, to exclude <i>xml_schema</i> sub-folder, add a directory filter in Harvest configuration file:
<source>
&lt;harvest&gt;
  &lt;directories&gt;
...
    &lt;directoryFilter&gt;
      &lt;exclude&gt;xml_schema&lt;/exclude&gt;
    &lt;/directoryFilter&gt;
  &lt;/directories&gt;
&lt;/harvest&gt;
</source>
There is no include option for sub-directories.
</p>

<h4>Filtering Products</h4>
<p>
You can include or exclude products. For example, to only process documents, add following 
product filter in Harvest configuration file:
</p>
<source>
&lt;harvest&gt;
  &lt;directories&gt;
...
    &lt;productFilter&gt;
      &lt;include&gt;Product_Document&lt;/include&gt;
    &lt;/productFilter&gt;
  &lt;/directories&gt;
&lt;/harvest&gt;
</source>

</section>



</body>
</document>
